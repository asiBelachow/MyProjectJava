package presenter;

import java.io.IOException;
import java.util.Iterator;
import java.util.Observable;
import model.Model;
import view.View;

public class MyPresenter extends AbstractPresenter {

	

	public MyPresenter(Model model, View view) {
		super(model, view);
		
	}

	@Override
	public void setSolution(String solution){
		
		
	}

	@Override
	public void update(Observable o, Object args) {
		String temp = (String) args;
		if( o == view ){
			
			Command command = getCommandByInput(temp);
			if(command != null){
				try {
					command.doCommmand(temp.split(" "));
				} catch (IOException e) {
					e.printStackTrace();
				}
			}else{
				String msg = "You entered unrecognized command (\"" + temp+"\") for help enter \"menu\"";
				view.displayMessage(msg);
			}
		
		}
		else if(o == model){
			
			if(temp.equals("dir")){
				model.getCommand((String)command);
			}
			
			
		}
		
	}
	
	private Command getCommandByInput(String input) {
		boolean commandOk = false;
		String command = null;

		// matching all regular expressions with the given user command
		Iterator<String> iter = commands.keySet().iterator();
		while (iter.hasNext() && !commandOk) {
			command = iter.next();
			commandOk = input.matches(command);
		}
		if (commandOk)
			return commands.get(command);
		else
			return null;

	}
	

}
