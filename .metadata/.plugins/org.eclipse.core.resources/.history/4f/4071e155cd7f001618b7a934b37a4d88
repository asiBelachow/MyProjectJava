package view.widgets;


import org.eclipse.swt.events.DisposeEvent;
import org.eclipse.swt.events.DisposeListener;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.widgets.Canvas;
import org.eclipse.swt.widgets.Composite;

import algorithms.maze3DGenerators.Maze3D;

public class MazeDisplay extends Canvas implements GameBoardDisplayAdapter {

	
	Maze3D maze;
	GameCharacter character;
	
	
	// Just a stub..
	int[][] mazeData={
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,0,0,0,0,0,0,0,1,1,0,1,0,0,1},
			{0,0,1,1,1,1,1,0,0,1,0,1,0,1,1},
			{1,1,1,0,0,0,1,0,1,1,0,1,0,0,1},
			{1,0,1,0,1,1,1,0,0,0,0,1,1,0,1},
			{1,1,0,0,0,1,0,0,1,1,1,1,0,0,1},
			{1,0,0,1,0,0,1,0,0,0,0,1,0,1,1},
			{1,0,1,1,0,1,1,0,1,1,0,0,0,1,1},
			{1,0,0,0,0,0,0,0,0,1,0,1,0,0,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,0,1,1},
			};
	
	
	//------------------------------Constructors-------------------------//
	
	public MazeDisplay(Composite parent, int style,Maze3D maze) {
		super(parent, style);
		setBackgroundImage(new Image(getDisplay(), "data/image/sonicbg.png"));
		setMaze(maze);
		
		addDisposeListener(new DisposeListener() {
			
			@Override
			public void widgetDisposed(DisposeEvent arg0) {
				character.dispose();
				
			}
		});
	}

	
	//------------------------------Getters and Setters-------------------------//
	public Maze3D getMaze() {
		return maze;
	}


	public void setMaze(Maze3D maze) {
		this.maze = maze;
	}


	public GameCharacter getCharacter() {
		return character;
	}


	public void setCharacter(GameCharacter character) {
		this.character = character;
	}
	
	
	

	
	
}
